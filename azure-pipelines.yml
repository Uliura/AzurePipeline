
stages:

- stage: terraform
  displayName: Build infrastructure
  jobs:
  - job: Terraform_Plan
    displayName: Terraform Init, Plan & Apply
    pool:
      name: My-AKS-Pool

      steps:

        - task: TerraformTaskV2@2
          inputs:
            provider: 'azurerm'
            command: 'init'
            backendServiceArm: 'AzureDevOpsSP'
            backendAzureRmResourceGroupName: 'AzureDevOps'
            backendAzureRmStorageAccountName: 'storadgeforazuredevops'
            backendAzureRmContainerName: 'terrablobs'
            backendAzureRmKey: 'terraform.tfstate'
        - task: TerraformTaskV2@2
          inputs:
            provider: 'azurerm'
            command: 'plan'
            commandOptions: '-out=tfplan'
            environmentServiceNameAzureRM: 'AzureDevOpsSP'
        - task: TerraformTaskV2@2
          inputs:
            provider: 'azurerm'
            command: 'apply'
            commandOptions: 'tfplan'
            environmentServiceNameAzureRM: 'AzureDevOpsSP'

- stage: deploy
  displayName: Deploy app to Azure
  jobs:
  - job: 
    displayName: Terraform Init, Plan & Apply
    pool:
      name: My-AKS-Pool
      steps:
        - task: NuGetToolInstaller@1

        - task: NuGetCommand@2
          inputs:
          restoreSolution: '$(solution)'
      
        - task: VSBuild@1
          inputs:
          solution: '$(solution)'
          msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
          platform: '$(buildPlatform)'
          configuration: '$(buildConfiguration)'
      
        - task: VSTest@2
          inputs:
          platform: '$(buildPlatform)'
          configuration: '$(buildConfiguration)'
      